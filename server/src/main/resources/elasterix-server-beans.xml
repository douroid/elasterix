<!--
  ~ Copyright 2013 Joost van de Wijgerd
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                       http://www.springframework.org/schema/util
	                       http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	                       	                  
    <!--
    <context:component-scan base-package="org.elasterix.sip" annotation-config="true"/>
    <context:spring-configured/>
    <context:annotation-config/>
    <tx:annotation-driven proxy-target-class="true"/>
    <aop:aspectj-autoproxy/>
    -->

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
					Elastic Actor Framework related beans
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- TODO: use a scan property to scan all messages in a particular package -->
    <util:map id="messageSerializers" key-type="java.lang.Class" value-type="org.elasticsoftware.elasticactors.serialization.MessageSerializer">
        <entry key="org.elasterix.server.messages.SipRegister">
            <bean class="org.elasticsoftware.elasticactors.base.serialization.JacksonMessageSerializer">
                <constructor-arg ref="objectMapper"/>
            </bean>
        </entry>
    </util:map>
    <util:map id="messageDeserializers" key-type="java.lang.Class" value-type="org.elasticsoftware.elasticactors.serialization.MessageDeserializer">
        <entry key="org.elasterix.server.messages.SipRegister">
            <bean class="org.elasticsoftware.elasticactors.base.serialization.JacksonMessageDeserializer">
                <constructor-arg value="org.elasterix.server.messages.SipRegister"/>
                <constructor-arg ref="objectMapper"/>
            </bean>
        </entry>
    </util:map>
    
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
					SIP Server
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<bean id="sipChannelFactory" class="org.elasterix.sip.SipChannelFactoryImpl" destroy-method="destroy">
		<property name="initialCacheSize" value="5000"/>
		<property name="sipServerHandler" ref="sipServerHandler"/>
	</bean>

    <bean id="sipServer" class="org.elasterix.sip.SipServer" init-method="start" destroy-method="stop">
    	<property name="channelFactory" ref="nioServerSocketChannelFactory"/>
    	<property name="port" value="5060"/>
        <property name="sipServerHandler" ref="sipServerHandler"/>
    </bean>

    <bean id="sipServerHandler" class="org.elasterix.sip.SipServerHandler">
        <property name="messageHandler" ref="sipService"/>
        <property name="sipChannelFactory" ref="sipChannelFactory"/>
    </bean>

    <bean id="sipService" class="org.elasterix.server.sip.SipService">   
    	<property name="sipMessageSender" ref="sipMessageSender"/>
    </bean>
    
    <bean id="sipMessageSender" class="org.elasterix.sip.SipMessageSenderImpl">   
    	<property name="sipChannelFactory" ref="sipChannelFactory"/> 	
    </bean>
    
 	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
					Netty related beans
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<bean id="nioServerSocketChannelFactory" class="org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory">
		<constructor-arg index="0" ref="bossExecutor"/>
		<constructor-arg index="1" ref="workerExecutor"/>
		<constructor-arg index="2" type="int" ref="localMaxThread"/>
	</bean>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
					Runtime related beans
	- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <bean id="runTime" class="java.lang.Runtime" factory-method="getRuntime"/>

	<bean id="localMaxThread" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<ref bean="runTime"/>
		</property>
		<property name="targetMethod">
			<value>availableProcessors</value>
		</property>
	</bean>

	<bean id="bossExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool">
		<constructor-arg index="0">
			<bean class="java.util.concurrent.Executors" factory-method="defaultThreadFactory"/>
		</constructor-arg>
	</bean>

	<bean id="workerExecutor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool">
		<constructor-arg index="0">
			<bean class="java.util.concurrent.Executors" factory-method="defaultThreadFactory"/>
		</constructor-arg>
	</bean>   
</beans>